Using a hls::stream object inside a structure that is used in the
interface will cause the struct port to be automatically disaggregated
by the Vitis HLS compiler. The generated RTL interface will contain
separate RTL ports for the hls::stream object s_in (named d_s_in_V_*)
and separate RTL ports for the array arr (named d_arr_*).

Note: Using hls::streams<> in the interface can cause the port name to
be renamed. The stream port name is changed from "portA" to
"portA_V". Note that this can occur even if the hls::stream is a
member of a class or struct. This was done for backward compatibility
with several HLS IPs.


Files Included in this Package
==============================
README  
example.cpp  
example.h  
example_test.cpp  
run_hls.tcl

Running the Design (edit run_hls.tcl to set $hls_exec and enable specific run steps)
=========================================================
vitis_hls -f run_hls.tcl

Vitis HLS will issue the following messages in the log file:

INFO: [HLS 214-210] Disaggregating variable 'd'
INFO: [HLS 214-241] Aggregating fifo (hls::stream) variable 'd_s_in' with compact=bit mode in 32-bits




