/*
 * Copyright 2019 Xilinx, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Example code for a scaled-integer fixed-point Hamming window function.
 * This example is intended to demonstrates the recommended coding style
 * when an array should be implemented as a ROM.  The key guideline is that
 * the ROM's source (in the C code) array should be initialized by a sub-
 * function to the function that access (reads from) the array.  When the
 * array is properly inferred to be a ROM, the initialization function will
 * be optimized away during HLS.
 *
 */

Files Included in this Package
==================================================
hamming_window.c   - source for the hamming_window() function
hamming_window.h    - header file with function prototype and default params
hamming_window_test.c - test program for SW model validation & RTL co-sim
run_hls.tcl        - HLS run script
x_hls.tcl          - auxilary script setting HLS run-level
README             - this file

Running the Design
=================================================
vitis_hls -f run_hls.tcl
